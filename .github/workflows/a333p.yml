name: Build OnePlus Kernel (Optimized)
on:
  workflow_dispatch:
    inputs:
      device:
        description: "Target Device (CPU Variant)"
        required: true
        default: 'sm8650'
      config:
        description: "Device Tree Config Name"
        required: true
        default: 'oneplus_ace3_pro_v'
      processor:
        description: "Processor Code Name"
        required: true
        default: 'pineapple'
      android_ver:
        description: "Target Android Version"
        required: true
        default: 'android14'
      kernel_ver:
        description: "Kernel Version"
        required: true
        default: '6.1'
      kernel_name:
        description: "Custom Kernel Name Suffix"
        required: true
        default: '-android14-11-o-g1132d864665d'
      ksu_variant:
        description: "KernelSU Variant"
        required: true
        type: choice
        options:
          - Official
          - SukiSU
        default: SukiSU
      ksu_version:
        description: "KernelSU Build Variant"
        required: true
        type: choice
        options:
          - Without KSU
          - Tagged Release
          - Main Branch
        default: Main Branch
      susfs_enable:
        description: "Enable SUSFS Support"
        required: true
        type: boolean
        default: true
      vfs_patch_enable:
        description: "Enable VFS Patching (New Hooks)"
        required: true
        type: choice
        options:
          - Enable
          - Disable
        default: Enable

jobs:
  build_kernel:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    environment:
      name: Kernel Build Environment
      url: https://github.com/your-org/your-repo/actions

    steps:
      - name: Initialize Workspace
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Maximize Disk Space
        uses: yyc/github-actions-maximize-disk-space@v1
        with:
          clean-package-cache: true
          remove-android-sdk: true

      - name: Set Git Identity
        run: |
          git config --global user.name "Your Name"
          git config --global user.email "your@email.com"

      - name: Install System Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends \
            bc bison build-essential ccache flex g++-multilib \
            git gnupg gperf libssl-dev libxml2-utils make \
            python3 python3-distutils python3-venv rsync unzip wget zip

      - name: Install Repo Tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo-1.13.1 > ~/bin/repo
          chmod a+x ~/bin/repo
          export PATH="$HOME/bin:$PATH"

      - name: Sync Kernel Sources
        run: |
          mkdir -p kernel-workspace
          cd kernel-workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git \
                    -b refs/heads/oneplus/${{ github.event.inputs.device }} \
                    -m ${{ github.event.inputs.config }}.xml \
                    --depth=1
          repo sync -j$(nproc) --fail-fast

      - name: Clean Protected Exports
        run: |
          find kernel_platform/{common,msm-kernel}/android/ -name 'abi_gki_protected_exports*' -exec rm {} \;

      - name: Prepare Build Configuration
        run: |
          sed -i 's/ -dirty//g' kernel_platform/*/scripts/setlocalversion
          cp device/oneplus/${{ github.event.inputs.processor }}/BoardConfig.mk .

      - name: Integrate KernelSU
        if: ${{ github.event.inputs.ksu_variant != 'Official' }}
        run: |
          local ksu_dir="kernel_platform/KernelSU"
          mkdir -p ${ksu_dir}
          case "${{ github.event.inputs.ksu_variant }}" in
            SukiSU)
              git clone --depth=1 https://github.com/ShirkNeko/KernelSU.git ${ksu_dir}/core
              ;;
            SuSuKernel)
              git clone --depth=1 https://github.com/ShirkNeko/SuSuKernel.git ${ksu_dir}/core
              ;;
          esac
          pushd ${ksu_dir}/core
          git checkout ${{ github.event.inputs.ksu_version }}
          popd

      - name: Apply SUSFS Patches
        if: ${{ github.event.inputs.susfs_enable }}
        run: |
          local susfs_dir="kernel_platform/common/susfs"
          mkdir -p ${susfs_dir}
          curl -LO "https://gitlab.com/simonpunk/susfs4ksu/-/archive/gki-${{ github.event.inputs.android_ver }}-${{ github.event.inputs.kernel_ver }}/susfs4ksu-gki-${{ github.event.inputs.android_ver }}-${{ github.event.inputs.kernel_ver }}.tar.gz"
          tar -xzf susfs4ksu-gki*.tar.gz -C ${susfs_dir} --strip-components=1
          rm susfs4ksu*.tar.gz
          cd ${susfs_dir}
          patch -p1 < 50_add_susfs.patch
          patch -p1 < fs/lz4k.patch

      - name: Apply VFS Hooks
        if: ${{ github.event.inputs.vfs_patch_enable == 'Enable' }}
        run: |
          curl -LO "https://github.com/ShirkNeko/SukiSU_patch/raw/main/hooks/new_hooks.patch"
          patch -p1 < new_hooks.patch

      - name: Configure Kernel
        run: |
          export ARCH=arm64 CROSS_COMPILE=aarch64-linux-android-
          make O=out ${{ github.event.inputs.config }}_defconfig
          make menuconfig

      - name: Build Kernel
        run: |
          export KCFLAGS="-fno-pic"
          make -j$(nproc) O=out \
               KCFLAGS="${KCFLAGS}" \
               CCACHE_DIR=/tmp/ccache \
               CCACHE_COMPRESS=1

      - name: Package Artifacts
        run: |
          mkdir -p artifacts
          cp out/arch/arm64/boot/Image.gz-dtb artifacts/kernel.img
          cp out/arch/arm64/boot/dtbo.img artifacts/dtbo.img

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}_${{ github.sha }}
          path: artifacts/*
          retention-days: 7

      - name: Clean Up
        run: |
          rm -rf kernel-workspace
          rm -rf ~/.ccache
